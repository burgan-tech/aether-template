version: "3.9"
services:

  redis:
    container_name: bbt-redis
    image: redis:latest
    restart: always
    ports:
      - '6378:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - bbt-development

  redisinsight:
    container_name: bbt-red-insight
    image: redislabs/redisinsight:latest
    ports:
      - '5501:8001'
    volumes:
      - redisinsight:/db
    restart: unless-stopped
    networks:
      - bbt-development

  postgres:
    container_name: bbt-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - bbt-development

  pgadmin:
    container_name: bbt-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "info@info.com"
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5502:80"
    restart: unless-stopped
    networks:
      - bbt-development
        
  vault:
    container_name: bbt-vault
    image: vault:1.13.3
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8200'
      VAULT_API_ADDR: 'https://0.0.0.0:8200'
      VAULT_DEV_ROOT_TOKEN_ID: 'admin'
      VAULT_TOKEN: 'admin'
    volumes:
      - ./config/vault:/vault/file
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="admin"
    networks:
      - bbt-development

  vault-prepopulate:
    image: alpine/curl:latest
    depends_on:
      - vault
    volumes:
      - ./config/vault/vault.sh:/etc/vault/prepopulate_vault.sh
    command: ["sh", "-c", "chmod +x /etc/vault/prepopulate_vault.sh && /etc/vault/prepopulate_vault.sh"]
    networks:
      - bbt-development

  # optional
  elastic:
    container_name: bbt-elastic
    image: elasticsearch:8.8.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
    networks:
      - bbt-development

  apm:
    container_name: bbt-apm
    image: docker.elastic.co/apm/apm-server:7.17.23
    networks:
      - bbt-development
    ports:
      - "5200:8200"
    command: >
      apm-server -e
               -E apm-server.ssl.enabled=false
               -E apm-server.rum.enabled=true
               -E apm-server.rum.allow_origins=["*"]
               -E setup.template.settings.index.number_of_replicas=0
               -E setup.kibana.host=bbt-kibana:5601
               -E apm-server.kibana.enabled=true
               -E apm-server.kibana.host=bbt-kibana:5601
               -E output.elasticsearch.hosts=["bbt-elastic:9200"]
    depends_on:
      - elastic
      - kibana

  # optional
  kibana:
    container_name: bbt-kibana
    image: kibana:8.8.1
    environment:
      - ELASTICSEARCH_URL=http://bbt-elastic:9200
      - ELASTICSEARCH_HOSTS=http://bbt-elastic:9200
      - xpack.security.enabled=false
    networks:
      - bbt-development
    depends_on:
      - elastic
    ports:
      - 5601:5601

  # optional
  grafana:
    container_name: bbt-grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - bbt-development
    # depends_on:
    #   - prometheus

  # optional
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./config/otel/otel-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    networks:
      - bbt-development

  # optional
  # prometheus:
  #   container_name: bbt-prometheus
  #   image: prom/prometheus:latest
  #   command:
  #     - "--config.file=/etc/prometheus.yml"
  #   volumes:
  #     - ./config/prometheus:/etc
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - bbt-development

networks:
  bbt-development:
    external: true

volumes:
  redis:
  redisinsight:
  postgres:
  pgadmin:
  grafana:
  # prometheus: